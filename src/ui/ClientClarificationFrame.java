//------------------------------------------------------------------------------
// Name: Matthew Mossner
// Course: CS 421
// Semester: Fall 2014
// Instructor: Il-Hyung Cho
// Date Finished: 
// Program Description:
//------------------------------------------------------------------------------
package ui;

import businessobjects.Clarification;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Matthew Mossner
 */
public class ClientClarificationFrame extends javax.swing.JFrame {

    public long lastUpdated;
    private ArrayList<Clarification> clarifications;
    
    /**
     * Creates new form SubmitClarificationFrame
     */
    public ClientClarificationFrame() {
        initComponents();
    }
    
    public void updateTable(ArrayList<Clarification> updatedClarifications) {
        lastUpdated = new Date().getTime();
        for (Clarification clarification : updatedClarifications) {
            if (clarifications.contains(clarification)) {
                int index = clarifications.indexOf(clarification);
                clarifications.set(index, clarification);
            }
            else
                clarifications.add(clarification);
        }
        jtblClarifications.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblClarifications = new javax.swing.JTable();
        jbtnNewClarification = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtblClarifications.setModel(new ClarificationTableModel());
        jScrollPane3.setViewportView(jtblClarifications);
        if (jtblClarifications.getColumnModel().getColumnCount() > 0) {
            jtblClarifications.getColumnModel().getColumn(0).setPreferredWidth(10);
            jtblClarifications.getColumnModel().getColumn(1).setPreferredWidth(10);
        }

        jbtnNewClarification.setText("New Clarification Request");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(200, Short.MAX_VALUE)
                .addComponent(jbtnNewClarification)
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnNewClarification)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientClarificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientClarificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientClarificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientClarificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientClarificationFrame().setVisible(true);
            }
        });
    }
    
    private class ClarificationTableModel extends DefaultTableModel {

        @Override
        public Object getValueAt(int row, int column) {
            Clarification clarification = clarifications.get(row);
            switch (column) {
                case 0:
                    return clarification.getProblemNumber();
                case 1:
                    return (clarification.isAnswered() ? "ANSWERED" : "PENDING");
                case 2:
                    return clarification.getQuestion();
                default:
                    return clarification.getAnswer();
            }
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return "Problem Number";
                case 1:
                    return "Status";
                case 2:
                    return "Question";
                default:
                    return "Answer";
            }
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public int getRowCount() {
            return clarifications.size();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    public javax.swing.JButton jbtnNewClarification;
    public javax.swing.JTable jtblClarifications;
    // End of variables declaration//GEN-END:variables
}